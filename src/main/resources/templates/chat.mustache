{{>layout/header}}


<div id="container">
    <div id="chatHeader">
    {{>snippet/goBackLink}}
    {{#profile}}
        <img id="profilePicture" src="../images/{{profilePictureName}}" width="100">
        <h1>{{name}}</h1>
    {{/profile}}
    </div>

    <div id="chatContainer">
    {{#messages}}
        {{#isIncoming}}
            <p class="incomingMessage">{{message}}</p>
        {{/isIncoming}}
        {{^isIncoming}}
            <p class="outgoingMessage">{{message}}</p>
        {{/isIncoming}}

    {{/messages}}
    </div>

    <div id="chat"></div>

    <iframe name="frame" style="display:none;"></iframe>
    <form id="sendForm" method="post" action="./send?profileId={{profile.id}}" target="frame" onsubmit="resetForm(this);">
        <input type="text" id="messageInput" name="messageInput" required autofocus>
        {{>snippet/csrfToken}}
        <input id="sendButton" type="submit" value="Send">
    </form>

</div>

{{>snippet/nav}}
<script type='text/javascript'>
    function refreshPage(){
        setTimeout(function () {
            location.reload ? location.reload() : location = location;
        }, 100);
    }

    function messageFromJSON(json){
        var name = "{{profile.name}}";
        var html = "<p " + (json['isIncoming'] ? 'class="incomingMessage"' : 'class="outgoingMessage"' ) + ">" + json['message'] + "</p>";
        return html;
    }

    async function loadChat() {
        var hostUrl = location.host;

        var url = 'http://' + hostUrl + '/messages?profileId={{profile.id}}';

        let messages = [];
        let chatHTML = ""
        let data = await fetch(url)
                .then((r) => r.json())
                .then(data => {
                    return data;
                });

        data.forEach((e) => {
            chatHTML = chatHTML + (messageFromJSON(JSON.parse(e.replace('/', ''))))
        });


        messages.forEach((e) => chatHTML = chatHTML + messageFromJSON(e));
        var chatElement = document.getElementById('chat');
        chatElement.innerHTML = chatHTML;
    }

    function resetForm(e) {
        setTimeout(async function() {
            loadChat();
            e.reset();
        }, 100);
    }

    addEventListener("DOMContentLoaded", loadChat);

    setInterval(loadChat, 2000)


</script>


{{>layout/footer}}